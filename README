- Build Instructions

-- MINGW64

--- Setup

```
mkdir build
cd build
cmake .. -G "MinGW Makefiles" -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON -DCMAKE_MAKE_PROGRAM=mingw32-make
```

The file `toolchain.cmake` has hardcoded paths for MSYS2 on my machine.  These can be overridden by passing a specific toolchain file:

```
 cmake .. -G "MinGW Makefiles" -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON -DCMAKE_MAKE_PROGRAM=mingw32-make --toolchain ../toolchain2.cmake
```

Maybe make this file in your home dir if you're not using my exact setup :)

--- Build

Typically in Unix you'd just type 'make' and it'd work here, but for some reason my MSYS2 shell doesn't work correctly with this, so I have a workaround.

build command:

```
cmake --build . -j8

vscode runs

C:\\progs\\msys2\\mingw64\\bin\\cmake.exe --build c:/progs/sadelica-new-world/build --config Debug --target SNW -j 18 --
```

clean command:

```
cmake --build . --target clean
```

This drops the executable one directory up ../ This is done so that the exe can load from the `assets` dir without any copying.  This will probably be changed later.