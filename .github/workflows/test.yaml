name: Tests CI
on: [push, pull_request]
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v2.3.1
        with:
          persist-credentials: false

      - name: Install SDL
        run: |
          sudo apt update
          sudo apt install libsdl2-ttf-dev libsdl2-image-dev libsdl2-mixer-dev libsdl2-gfx-dev -y
          cd /tmp
          git clone https://github.com/libsdl-org/SDL
          cd SDL
          mkdir build
          cd build
          ../configure
          make
          sudo make install

      - name: Install Gtest
        run: |
          sudo apt-get install libgtest-dev
          cd /usr/src/googletest/googletest
          sudo mkdir build
          cd build
          sudo cmake ..
          sudo make
          sudo cp libgtest* /usr/lib/
          cd ..
          sudo rm -rf build
          sudo mkdir /usr/local/lib/googletest
          sudo ln -s /usr/lib/libgtest.a /usr/local/lib/googletest/libgtest.a
          sudo ln -s /usr/lib/libgtest_main.a /usr/local/lib/googletest/libgtest_main.a

      - name: Build
        run: |
          cd cpp
          make test

      - name: Tests ‚úÖ
        if: ${{ success() }}
        run: |
          curl --request POST           --url https://api.github.com/repos/${{ github.repository }}/statuses/${{ github.sha }}           --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}'           --header 'content-type: application/json'           --data '{
            "context": "tests",
            "state": "success",
            "description": "Tests passed",
            "target_url": "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          }'

      - name: Tests üö®
        if: ${{ failure() }}
        run: |
          curl --request POST           --url https://api.github.com/repos/${{ github.repository }}/statuses/${{ github.sha }}           --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}'           --header 'content-type: application/json'           --data '{
            "context": "tests",
            "state": "failure",
            "description": "Tests failed",
            "target_url": "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          }'
