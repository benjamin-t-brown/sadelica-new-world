/**
 * IN2 Logic Tree File
 *
 * This file has been generated by an IN2 compiler.
 */
/*eslint-disable-line*/ function run(isDryRun) {
  /* global player, core, engine */
  const files = {};
  const scope = {};
  const CURRENT_NODE_VAR = 'curIN2n';
  const CURRENT_FILE_VAR = 'curIN2f';
  const LAST_FILE_VAR = 'lasIN2f';

  files[`main.json`] = id => {
    player.set(CURRENT_FILE_VAR, 'main.json');
    // action
    scope.WpSRz = () => {
      player.set(CURRENT_NODE_VAR, 'WpSRz');
      scope.Ft2T4();
    };

    // next_file
    scope.Ft2T4 = () => {
      player.set(LAST_FILE_VAR, player.get(CURRENT_FILE_VAR));
      let key = `NONE`;
      let func = files[key];
      if (func) {
        func();
      } else {
        core.exit();
      }
    };

    if (id === undefined) {
      scope.WpSRz();
    } else if (id) {
      scope[id]();
    }
    return player.state;
  };

  files[`Alinea_CH_Sol.json`] = id => {
    player.set(CURRENT_FILE_VAR, 'Alinea_CH_Sol.json');
    // switch
    scope.LtObD = () => {
      player.set(CURRENT_NODE_VAR, 'LtObD');
      if (player.once()) scope.kzGPw();
      else if (true) scope.cafB3();
    };
    // text
    scope.kzGPw = () => {
      player.set(CURRENT_NODE_VAR, 'kzGPw');
      let text = `A hooded man leans against a tree, and stares blankly out at the ocean.  Something about his stillness is unnerving.  You have the impression he has been here for quite some time, almost like he is part of the tree he leans against.`;
      core.say(text, scope.IUz5L);
    };

    // choice
    scope.IUz5L = () => {
      player.set(CURRENT_NODE_VAR, 'IUz5L');
      let text = ``;
      core.choose(text, 'IUz5L', [
        {
          t: `Hey... what are you doing?`,
          cb: scope.EaRdf,
          c: () => {
            return true;
          },
        },
        {
          t: `Hey!  Would you mind answering the question?`,
          cb: scope.kZA14,
          c: () => {
            return player.get('nodes.EaRdf');
          },
        },
        {
          t: `*Approach him and grab his shoulder.*`,
          cb: scope.pCxIY,
          c: () => {
            return player.get('nodes.kZA14');
          },
        },
        {
          t: `Sheesh, what's your problem?`,
          cb: scope.DAHzS,
          c: () => {
            return player.get('nodes.pCxIY');
          },
        },
        {
          t: `Nevermind.`,
          cb: scope.tG08a,
          c: () => {
            return true;
          },
        },
      ]);
    };

    // text
    scope.EaRdf = () => {
      player.set(CURRENT_NODE_VAR, 'EaRdf');
      let text = `He doesn't respond, and in fact, completely ignores you.`;
      core.say(text, scope.IUz5L);
    };

    // text
    scope.kZA14 = () => {
      player.set(CURRENT_NODE_VAR, 'kZA14');
      let text = `Again, he ignores you.`;
      core.say(text, scope.IUz5L);
    };

    // text
    scope.pCxIY = () => {
      player.set(CURRENT_NODE_VAR, 'pCxIY');
      let text = `The moment you take your first step towards him, he sharply turns his head.  Sharp eyes blaze beneath his hood, and an intense, murderous gaze halts your step.  He opens his mouth to speak in a croaking rasp.`;
      core.say(text, scope.awd6F);
    };

    // text
    scope.awd6F = () => {
      player.set(CURRENT_NODE_VAR, 'awd6F');
      let text = `"Do not test my patience.  Leave me alone."`;
      core.say(text, scope.IUz5L);
    };

    // text
    scope.DAHzS = () => {
      player.set(CURRENT_NODE_VAR, 'DAHzS');
      let text = `Unsurprisingly, your question is met with further silence.  He turns to face the ocean once again.`;
      core.say(text, scope.IUz5L);
    };

    // next_file
    scope.tG08a = () => {
      player.set(LAST_FILE_VAR, player.get(CURRENT_FILE_VAR));
      let key = `NONE`;
      let func = files[key];
      if (func) {
        func();
      } else {
        core.exit();
      }
    };

    // text
    scope.cafB3 = () => {
      player.set(CURRENT_NODE_VAR, 'cafB3');
      let text = `This hooded man is still standing here, staring at the ocean.`;
      core.say(text, scope.IUz5L);
    };

    if (id === undefined) {
      scope.LtObD();
    } else if (id) {
      scope[id]();
    }
    return player.state;
  };

  files[`Alinea_CH_SpyRigby.json`] = id => {
    player.set(CURRENT_FILE_VAR, 'Alinea_CH_SpyRigby.json');
    // next_file
    scope.Hg9db = () => {
      player.set(LAST_FILE_VAR, player.get(CURRENT_FILE_VAR));
      let key = `NONE`;
      let func = files[key];
      if (func) {
        func();
      } else {
        core.exit();
      }
    };

    if (id === undefined) {
      scope.Hg9db();
    } else if (id) {
      scope[id]();
    }
    return player.state;
  };

  files[`Alinea_CH_Igmund.json`] = id => {
    player.set(CURRENT_FILE_VAR, 'Alinea_CH_Igmund.json');
    // next_file
    scope.iPi3f = () => {
      player.set(LAST_FILE_VAR, player.get(CURRENT_FILE_VAR));
      let key = `NONE`;
      let func = files[key];
      if (func) {
        func();
      } else {
        core.exit();
      }
    };

    if (id === undefined) {
      scope.iPi3f();
    } else if (id) {
      scope[id]();
    }
    return player.state;
  };

  files[`Alinea_CH_RadmilaOmvaire.json`] = id => {
    player.set(CURRENT_FILE_VAR, 'Alinea_CH_RadmilaOmvaire.json');
    // next_file
    scope.KxZH3 = () => {
      player.set(LAST_FILE_VAR, player.get(CURRENT_FILE_VAR));
      let key = `NONE`;
      let func = files[key];
      if (func) {
        func();
      } else {
        core.exit();
      }
    };

    if (id === undefined) {
      scope.KxZH3();
    } else if (id) {
      scope[id]();
    }
    return player.state;
  };

  files[`Alinea_CH_SchovanAbivola.json`] = id => {
    player.set(CURRENT_FILE_VAR, 'Alinea_CH_SchovanAbivola.json');
    // next_file
    scope.OhVgn = () => {
      player.set(LAST_FILE_VAR, player.get(CURRENT_FILE_VAR));
      let key = `NONE`;
      let func = files[key];
      if (func) {
        func();
      } else {
        core.exit();
      }
    };

    if (id === undefined) {
      scope.OhVgn();
    } else if (id) {
      scope[id]();
    }
    return player.state;
  };

  files[`Alinea_CH_Idoreo.json`] = id => {
    player.set(CURRENT_FILE_VAR, 'Alinea_CH_Idoreo.json');
    // next_file
    scope.FdbAF = () => {
      player.set(LAST_FILE_VAR, player.get(CURRENT_FILE_VAR));
      let key = `NONE`;
      let func = files[key];
      if (func) {
        func();
      } else {
        core.exit();
      }
    };

    if (id === undefined) {
      scope.FdbAF();
    } else if (id) {
      scope[id]();
    }
    return player.state;
  };

  files[`Alinea_CH_DockmasterClaire.json`] = id => {
    player.set(CURRENT_FILE_VAR, 'Alinea_CH_DockmasterClaire.json');
    // switch
    scope.G2sLG = () => {
      player.set(CURRENT_NODE_VAR, 'G2sLG');
      if (player.once()) scope.XgRzi();
      else if (true) scope.BgtJr();
    };
    // text
    scope.XgRzi = () => {
      player.set(CURRENT_NODE_VAR, 'XgRzi');
      let text = `A stern woman, clipboard in hand, oversees the workers bustling about the docks.  She barks orders with every other breath, gesturing curtly with bony fingers and an icy glare.  A bright green tabard marks her as a Realm adjutant.  Your approach hardly gives her pause.`;
      core.say(text, scope.BgtJr);
    };

    // text
    scope.BgtJr = () => {
      player.set(CURRENT_NODE_VAR, 'BgtJr');
      let text = `"What is it?  What do you need?"`;
      core.say(text, scope.qlRtQ);
    };

    // choice
    scope.qlRtQ = () => {
      player.set(CURRENT_NODE_VAR, 'qlRtQ');
      let text = ``;
      core.choose(text, 'qlRtQ', [
        {
          t: `Who are you?`,
          cb: scope.DERfp,
          c: () => {
            return true;
          },
        },
        {
          t: `What are "Larks"?`,
          cb: scope.Y5uuR,
          c: () => {
            return player.get('nodes.DERfp');
          },
        },
        {
          t: `Nevermind.`,
          cb: scope.w1b5S,
          c: () => {
            return true;
          },
        },
      ]);
    };

    // text
    scope.DERfp = () => {
      player.set(CURRENT_NODE_VAR, 'DERfp');
      let text = `She spits at the ground.  "Faw!  Larks!  As clueless as ever I see."`;
      core.say(text, scope.Ip8B3);
    };

    // text
    scope.Ip8B3 = () => {
      player.set(CURRENT_NODE_VAR, 'Ip8B3');
      let text = `She points at her tabard as if that was self-explanitory.  "I'm Claire.  Dock Master here in Alinea.  That means try to behave when I'm around or I'll have to send you into seclusion.  Had a few troublemakers just yesterday, thought they could sneak a few shipments of shelk into warehouse 3."  She shakes her head in disappointment.  "I'd feel bad for them if I hadn't seen the like a hundred times over."`;
      core.say(text, scope.qlRtQ);
    };

    // text
    scope.Y5uuR = () => {
      player.set(CURRENT_NODE_VAR, 'Y5uuR');
      let text = `"It means you're new here.  Get used to that label.  You're the Larkiest Larks I've ever seen."`;
      core.say(text, scope.qlRtQ);
    };

    // next_file
    scope.w1b5S = () => {
      player.set(LAST_FILE_VAR, player.get(CURRENT_FILE_VAR));
      let key = `NONE`;
      let func = files[key];
      if (func) {
        func();
      } else {
        core.exit();
      }
    };

    if (id === undefined) {
      scope.G2sLG();
    } else if (id) {
      scope[id]();
    }
    return player.state;
  };

  files[`Alinea_CH_Elvyosa.json`] = id => {
    player.set(CURRENT_FILE_VAR, 'Alinea_CH_Elvyosa.json');
    // switch
    scope.L5gDe = () => {
      player.set(CURRENT_NODE_VAR, 'L5gDe');
      if (player.once()) scope.E85Sb();
      else if (true) scope.GhQWY();
    };
    // text
    scope.E85Sb = () => {
      player.set(CURRENT_NODE_VAR, 'E85Sb');
      let text = `A burly woman lounges beside a pile of crates haphazardly strewn about the nearby docks.  If her headband and tattoos weren't enough to indicate a sailor, then her bare feet and cocky attitude all but shout the observation. `;
      core.say(text, scope.LBTy3);
    };

    // text
    scope.LBTy3 = () => {
      player.set(CURRENT_NODE_VAR, 'LBTy3');
      let text = `"Aye, what have we got here?  New in town are ye, Lark?"`;
      core.say(text, scope.BU4pY);
    };

    // choice
    scope.BU4pY = () => {
      player.set(CURRENT_NODE_VAR, 'BU4pY');
      let text = ``;
      core.choose(text, 'BU4pY', [
        {
          t: `Who are you?`,
          cb: scope.QKSpq,
          c: () => {
            return true;
          },
        },
        {
          t: `Yep, I'm a Lark.  Got any advice for me?`,
          cb: scope.AWzg9,
          c: () => {
            return true;
          },
        },
        {
          t: `Honest work sounds good, what do you need me to do?`,
          cb: scope.mAmXO,
          c: () => {
            return player.get('nodes.gr5so');
          },
        },
        {
          t: `You own these ships?!  There's a lot of them.`,
          cb: scope.fh6tT,
          c: () => {
            return player.get('nodes.QKSpq');
          },
        },
        {
          t: `Nevermind.`,
          cb: scope.m8Gsl,
          c: () => {
            return true;
          },
        },
      ]);
    };

    // text
    scope.QKSpq = () => {
      player.set(CURRENT_NODE_VAR, 'QKSpq');
      let text = `"Elvyosa.  Captain Elvyosa.  Or at least everyone calls me that.  Not really sure what a Captain means to me to be honest.  Of course I own most of the ships in Alinea right now, so it kinda makes sense."`;
      core.say(text, scope.BU4pY);
    };

    // text
    scope.AWzg9 = () => {
      player.set(CURRENT_NODE_VAR, 'AWzg9');
      let text = `"You mean 'free' advice?  Not much.  Maybe a pittance.  Something like 'stay out of trouble'."`;
      core.say(text, scope.VSCcR);
    };

    // text
    scope.VSCcR = () => {
      player.set(CURRENT_NODE_VAR, 'VSCcR');
      let text = `She guffaws loudly and startles a nearby dockworker who nearly drops the crates he's carrying.`;
      core.say(text, scope.gr5so);
    };

    // text
    scope.gr5so = () => {
      player.set(CURRENT_NODE_VAR, 'gr5so');
      let text = `"But maybe you get something more substantial if you provide some good, honest work."`;
      core.say(text, scope.BU4pY);
    };

    // text
    scope.mAmXO = () => {
      player.set(CURRENT_NODE_VAR, 'mAmXO');
      let text = `She indicates a set of four barrels lined up behind you.`;
      core.say(text, scope.heM6D);
    };

    // text
    scope.heM6D = () => {
      player.set(CURRENT_NODE_VAR, 'heM6D');
      let text = `"Old Scopy bought those from me, but didn't want to pay somebody to come pick 'em up.  Seems to think I would do it for him.  I don't want to piss him off, he's a good fella, but I don't want to exert myself either.  So it'd be nice if somebody could push those bad boys over to his loading tarp.  Over to the east, across the wall."`;
      core.say(text, scope.Lfg1w);
    };

    // choice
    scope.Lfg1w = () => {
      player.set(CURRENT_NODE_VAR, 'Lfg1w');
      let text = ``;
      core.choose(text, 'Lfg1w', [
        {
          t: `You'll pay for this work right.`,
          cb: scope.gFytl,
          c: () => {
            return true;
          },
        },
        {
          t: `Well... I don't want to exert myself either.`,
          cb: scope.r1iZR,
          c: () => {
            return true;
          },
        },
        {
          t: `I'll consider it.`,
          cb: scope.DIrSS,
          c: () => {
            return true;
          },
        },
        {
          t: `No thanks.`,
          cb: scope.Ux0VL,
          c: () => {
            return true;
          },
        },
      ]);
    };

    // text
    scope.gFytl = () => {
      player.set(CURRENT_NODE_VAR, 'gFytl');
      let text = `"'Course I will.  How's 100 gp sound, and of course some brownie points from yours truly.  I make great brownies too."`;
      core.say(text, scope.Lfg1w);
    };

    // text
    scope.r1iZR = () => {
      player.set(CURRENT_NODE_VAR, 'r1iZR');
      let text = `"Then don't do it.  I'll find some other sucker.  Or maybe you find some other sucker.  Either way, if it gets done without me havin' to do anything, I'll pay you."`;
      core.say(text, scope.Lfg1w);
    };

    // text
    scope.DIrSS = () => {
      player.set(CURRENT_NODE_VAR, 'DIrSS');
      let text = `"Good.  But consider quickly, 'cuz those barrels shoulda been out of here an hour ago."`;
      core.say(text, scope.BU4pY);
    };

    // text
    scope.Ux0VL = () => {
      player.set(CURRENT_NODE_VAR, 'Ux0VL');
      let text = `"Your loss.  Offer's still on the table though if you come back."`;
      core.say(text, scope.BU4pY);
    };

    // text
    scope.fh6tT = () => {
      player.set(CURRENT_NODE_VAR, 'fh6tT');
      let text = `"Yer not impressed by much, are ya?  I've seen Realm patrols triple the size of my little water caravan.  And everyone on the Mainland makes fun of how small their ships are.  That's not even to speak of the Blackrose fleet.  Never seen it myself, I've heard their ships could black out the water for miles around."`;
      core.say(text, scope.nozmi);
    };

    // text
    scope.nozmi = () => {
      player.set(CURRENT_NODE_VAR, 'nozmi');
      let text = `"But I suppose it's not nothin'.  I'm a trader.  Make my way around Sadelica getting the best of whoever I can."`;
      core.say(text, scope.BU4pY);
    };

    // next_file
    scope.m8Gsl = () => {
      player.set(LAST_FILE_VAR, player.get(CURRENT_FILE_VAR));
      let key = `NONE`;
      let func = files[key];
      if (func) {
        func();
      } else {
        core.exit();
      }
    };

    // text
    scope.GhQWY = () => {
      player.set(CURRENT_NODE_VAR, 'GhQWY');
      let text = `"Gotta favor to ask me or something?"`;
      core.say(text, scope.BU4pY);
    };

    if (id === undefined) {
      scope.L5gDe();
    } else if (id) {
      scope[id]();
    }
    return player.state;
  };

  files[`Alinea_CH_DisgruntledPatron.json`] = id => {
    player.set(CURRENT_FILE_VAR, 'Alinea_CH_DisgruntledPatron.json');
    // switch
    scope.h96aB = () => {
      player.set(CURRENT_NODE_VAR, 'h96aB');
      if (player.once()) scope.NtlSc();
      else if (true) scope.wA9ql();
    };
    // text
    scope.NtlSc = () => {
      player.set(CURRENT_NODE_VAR, 'NtlSc');
      let text = `A man hunches over his goblet at one of the tables in this tavern.  When you approach he grunts noncommittally, but isn't outright hostile at the thought of speaking with you. `;
      core.say(text, scope.EsyDb);
    };

    // choice
    scope.EsyDb = () => {
      player.set(CURRENT_NODE_VAR, 'EsyDb');
      let text = ``;
      core.choose(text, 'EsyDb', [
        {
          t: `Something got you down?`,
          cb: scope.lgA0Q,
          c: () => {
            return true;
          },
        },
        {
          t: `What's wrong with that noble over there?`,
          cb: scope.T0fWE,
          c: () => {
            return player.get('nodes.odtqY');
          },
        },
        {
          t: `You mentioned the Guildimarche estate?`,
          cb: scope.f7rnl,
          c: () => {
            return player.get('nodes.bxosg');
          },
        },
        {
          t: `If he's that bad, maybe someone should knock that noble down a peg...`,
          cb: scope.PslAb,
          c: () => {
            return player.get('nodes.Enl6R');
          },
        },
        {
          t: `Nevermind.`,
          cb: scope.URfA6,
          c: () => {
            return true;
          },
        },
      ]);
    };

    // text
    scope.lgA0Q = () => {
      player.set(CURRENT_NODE_VAR, 'lgA0Q');
      let text = `He lifts his head to look at you, and you notice that he is not the slightest bit inebriated.  He shoots an irritated glance at the noble sitting at a nearby table, then shrugs.`;
      core.say(text, scope.M9kBm);
    };

    // text
    scope.M9kBm = () => {
      player.set(CURRENT_NODE_VAR, 'M9kBm');
      let text = `"Nah, not really.  Just trying to relax.  I move boxes all day.  It's tough work."`;
      core.say(text, scope.odtqY);
    };

    // text
    scope.odtqY = () => {
      player.set(CURRENT_NODE_VAR, 'odtqY');
      let text = `"Although... relaxing's also tough with his lot around."  He gestures towards the noble.`;
      core.say(text, scope.EsyDb);
    };

    // text
    scope.T0fWE = () => {
      player.set(CURRENT_NODE_VAR, 'T0fWE');
      let text = `"Ah, he's just an ass.  Talk with him for five minutes and you'll see that, plain as day."`;
      core.say(text, scope.bxosg);
    };

    // text
    scope.bxosg = () => {
      player.set(CURRENT_NODE_VAR, 'bxosg');
      let text = `"But honestly it's no surprise.  Everyone who works with the Guildimarche estate is like that one way or another."`;
      core.say(text, scope.Enl6R);
    };

    // text
    scope.Enl6R = () => {
      player.set(CURRENT_NODE_VAR, 'Enl6R');
      let text = `"Just kinda ruins the mood of the place.  Wish he'd go away."`;
      core.say(text, scope.EsyDb);
    };

    // text
    scope.f7rnl = () => {
      player.set(CURRENT_NODE_VAR, 'f7rnl');
      let text = `"Larks..." he swirls his mug and takes a ship.`;
      core.say(text, scope.nZtqw);
    };

    // text
    scope.nZtqw = () => {
      player.set(CURRENT_NODE_VAR, 'nZtqw');
      let text = `"Guildemarche's a really influential family out here on Sadelica.  They own a lot of land, run a lot of operations.  Me?  I stay out of the way of them.  Everything they do is for their own benefit.  They'd leave someone like me to rot if given the chance."`;
      core.say(text, scope.EsyDb);
    };

    // text
    scope.PslAb = () => {
      player.set(CURRENT_NODE_VAR, 'PslAb');
      let text = `"Heh, I'm not about to rock the boat with the Guildimarche estate, but yeah maybe someone should."`;
      core.say(text, scope.lolrB);
    };

    // text
    scope.lolrB = () => {
      player.set(CURRENT_NODE_VAR, 'lolrB');
      let text = `"You know, by the docks there's a nice pit of rocks the perfect size for tossing at something.  I chase kids from the place sometimes when they get a mind to make that 'something' each other."`;
      core.say(text, scope.ZwciS);
    };

    // text
    scope.ZwciS = () => {
      player.set(CURRENT_NODE_VAR, 'ZwciS');
      let text = `"Maybe one of those nice throwing rocks makes its way in here."`;
      core.say(text, scope.JuKBL);
    };

    // text
    scope.JuKBL = () => {
      player.set(CURRENT_NODE_VAR, 'JuKBL');
      let text = `"And maybe someone realizes that game the kids play is actually a bit fun."`;
      core.say(text, scope.pUpZU);
    };

    // text
    scope.pUpZU = () => {
      player.set(CURRENT_NODE_VAR, 'pUpZU');
      let text = `He sips his mug.`;
      core.say(text, scope.EsyDb);
    };

    // next_file
    scope.URfA6 = () => {
      player.set(LAST_FILE_VAR, player.get(CURRENT_FILE_VAR));
      let key = `NONE`;
      let func = files[key];
      if (func) {
        func();
      } else {
        core.exit();
      }
    };

    // text
    scope.wA9ql = () => {
      player.set(CURRENT_NODE_VAR, 'wA9ql');
      let text = `"Eh?"`;
      core.say(text, scope.EsyDb);
    };

    if (id === undefined) {
      scope.h96aB();
    } else if (id) {
      scope[id]();
    }
    return player.state;
  };

  files[`Alinea_CH_Chem.json`] = id => {
    player.set(CURRENT_FILE_VAR, 'Alinea_CH_Chem.json');
    // next_file
    scope.RLgZd = () => {
      player.set(LAST_FILE_VAR, player.get(CURRENT_FILE_VAR));
      let key = `NONE`;
      let func = files[key];
      if (func) {
        func();
      } else {
        core.exit();
      }
    };

    if (id === undefined) {
      scope.RLgZd();
    } else if (id) {
      scope[id]();
    }
    return player.state;
  };

  files[`Alinea_CH_BartoloCaldeburn.json`] = id => {
    player.set(CURRENT_FILE_VAR, 'Alinea_CH_BartoloCaldeburn.json');
    // switch
    scope.enWMm = () => {
      player.set(CURRENT_NODE_VAR, 'enWMm');
      if (player.once()) scope.mqogS();
      else if (true) scope.SwzEw();
    };
    // text
    scope.mqogS = () => {
      player.set(CURRENT_NODE_VAR, 'mqogS');
      let text = `A nobleman sits here, his clothes gaudy and pretentious, a deep blue lace lining every possible edge of his silk coat.  He clasps a large glass of plum wine and idly taps a finger on the rough wood of the table.  He ignores the other patrons in the room as his gaze passes imperiously by them to rest upon you.`;
      core.say(text, scope.dY7sz);
    };

    // text
    scope.dY7sz = () => {
      player.set(CURRENT_NODE_VAR, 'dY7sz');
      let text = `"And what have we here?  Another rabble come to further dissuade me from this pit of a town?"`;
      core.say(text, scope.ku2iV);
    };

    // choice
    scope.ku2iV = () => {
      player.set(CURRENT_NODE_VAR, 'ku2iV');
      let text = ``;
      core.choose(text, 'ku2iV', [
        {
          t: `Who are you?`,
          cb: scope.ASqD8,
          c: () => {
            return true;
          },
        },
        {
          t: `Don't like Alinea much?`,
          cb: scope.zkasm,
          c: () => {
            return true;
          },
        },
        {
          t: `You work for Lord Guildimarche?  Who is that?`,
          cb: scope.GM0EE,
          c: () => {
            return player.get('nodes.ASqD8');
          },
        },
        {
          t: `What is someone as 'esteemed' as you doing here?`,
          cb: scope.KLPVt,
          c: () => {
            return player.get('nodes.ASqD8');
          },
        },
        {
          t: `Idle threats?  Are you always this distasteful?`,
          cb: scope.DRtxf,
          c: () => {
            return player.get('nodes.OfySb');
          },
        },
        {
          t: `There are bandits to the north?`,
          cb: scope.wEid3,
          c: () => {
            return player.get('nodes.KLPVt');
          },
        },
        {
          t: `We might be able to take care of those bandits for you.`,
          cb: scope.st0xh,
          c: () => {
            return player.get('nodes.wEid3');
          },
        },
        {
          t: `Nevermind.`,
          cb: scope.udfI0,
          c: () => {
            return true;
          },
        },
      ]);
    };

    // text
    scope.ASqD8 = () => {
      player.set(CURRENT_NODE_VAR, 'ASqD8');
      let text = `"Lord Bartolo Caldeburn, originally of the Esthsmund Estates.  You've heard of those?"`;
      core.say(text, scope.zfyBY);
    };

    // text
    scope.zfyBY = () => {
      player.set(CURRENT_NODE_VAR, 'zfyBY');
      let text = `(You haven't.)`;
      core.say(text, scope.tE4LF);
    };

    // text
    scope.tE4LF = () => {
      player.set(CURRENT_NODE_VAR, 'tE4LF');
      let text = `He grows irritated.  "Yes well... They are renowned on the Mainland for their luxury.  I suppose simpletons such as yourselves would not understand.  Suffice to say that I am important.  Very important.  You should certainly not underestimate that fact.  These days I give my assistance to Lord Guildimarche and his grand estate."`;
      core.say(text, scope.ku2iV);
    };

    // text
    scope.zkasm = () => {
      player.set(CURRENT_NODE_VAR, 'zkasm');
      let text = `"Certainly not!  The people here no nothing of luxury.  They they think only in singles." He taps his glass. "A mere single selection of wine, a single bed, a single tavern...  How can a man visit this town with anything but disappointment?"`;
      core.say(text, scope.gIcZc);
    };

    // text
    scope.gIcZc = () => {
      player.set(CURRENT_NODE_VAR, 'gIcZc');
      let text = `"Only thing it has plenty of is Larks."  He makes a shooing gesture at you.`;
      core.say(text, scope.ku2iV);
    };

    // text
    scope.GM0EE = () => {
      player.set(CURRENT_NODE_VAR, 'GM0EE');
      let text = `He is aghast.  "I do not 'work for' Lord Guildimarche, as you so uncouthly put it.  We are of the noble persuasion, we do favors for each other.  We lend aid!"  `;
      core.say(text, scope.ViWA8);
    };

    // text
    scope.ViWA8 = () => {
      player.set(CURRENT_NODE_VAR, 'ViWA8');
      let text = `"It just so happens that the Guildimarche estate has quite the pull on Sadelica.  Save for Alinea and perhaps the Magi Tower, go most anywhere on this island and you'll find some establishment associated with that name.  This is not a coincidence."`;
      core.say(text, scope.FBd0A);
    };

    // text
    scope.FBd0A = () => {
      player.set(CURRENT_NODE_VAR, 'FBd0A');
      let text = `"Perhaps *you* would not know of such things, but support for a strong, well-established house tends to bear fruit."`;
      core.say(text, scope.ku2iV);
    };

    // text
    scope.KLPVt = () => {
      player.set(CURRENT_NODE_VAR, 'KLPVt');
      let text = `"I am waiting for the Bandits currently occupying the northern bridge to be dealt with.  Then I can safety return to a place of relative sanity."`;
      core.say(text, scope.OfySb);
    };

    // text
    scope.OfySb = () => {
      player.set(CURRENT_NODE_VAR, 'OfySb');
      let text = `"And might I advise you to watch your tone, or you might find your tongue in a ditch somewhere."  He takes a small sip from his drink, and you notice a wickedly curved blade on a hilt at his hip.`;
      core.say(text, scope.ku2iV);
    };

    // text
    scope.DRtxf = () => {
      player.set(CURRENT_NODE_VAR, 'DRtxf');
      let text = `"Like most reasonable people, I do not suffer fools."`;
      core.say(text, scope.ku2iV);
    };

    // text
    scope.wEid3 = () => {
      player.set(CURRENT_NODE_VAR, 'wEid3');
      let text = `"Yes there are, and they have been quite the nuisance.  I'm simply waiting for them to be dealt with.  It is only a matter of time."`;
      core.say(text, scope.ku2iV);
    };

    // text
    scope.st0xh = () => {
      player.set(CURRENT_NODE_VAR, 'st0xh');
      let text = `"Do whatever you wish."`;
      core.say(text, scope.FFgQw);
    };

    // text
    scope.FFgQw = () => {
      player.set(CURRENT_NODE_VAR, 'FFgQw');
      let text = `"Just don't expect any kind of reward from me.  Like I said, it's just a matter of time before SOMEONE does it."`;
      core.say(text, scope.ku2iV);
    };

    // next_file
    scope.udfI0 = () => {
      player.set(LAST_FILE_VAR, player.get(CURRENT_FILE_VAR));
      let key = `NONE`;
      let func = files[key];
      if (func) {
        func();
      } else {
        core.exit();
      }
    };

    // text
    scope.SwzEw = () => {
      player.set(CURRENT_NODE_VAR, 'SwzEw');
      let text = `"Back again I see..."`;
      core.say(text, scope.ku2iV);
    };

    if (id === undefined) {
      scope.enWMm();
    } else if (id) {
      scope[id]();
    }
    return player.state;
  };

  files[`Alinea_CH_SirLavolanChevel.json`] = id => {
    player.set(CURRENT_FILE_VAR, 'Alinea_CH_SirLavolanChevel.json');
    // next_file
    scope.r7TWk = () => {
      player.set(LAST_FILE_VAR, player.get(CURRENT_FILE_VAR));
      let key = `NONE`;
      let func = files[key];
      if (func) {
        func();
      } else {
        core.exit();
      }
    };

    if (id === undefined) {
      scope.r7TWk();
    } else if (id) {
      scope[id]();
    }
    return player.state;
  };

  files[`Alinea_CH_Gruff.json`] = id => {
    player.set(CURRENT_FILE_VAR, 'Alinea_CH_Gruff.json');
    // next_file
    scope.f1zni = () => {
      player.set(LAST_FILE_VAR, player.get(CURRENT_FILE_VAR));
      let key = `NONE`;
      let func = files[key];
      if (func) {
        func();
      } else {
        core.exit();
      }
    };

    if (id === undefined) {
      scope.f1zni();
    } else if (id) {
      scope[id]();
    }
    return player.state;
  };

  files[`Alinea_CH_Scopey.json`] = id => {
    player.set(CURRENT_FILE_VAR, 'Alinea_CH_Scopey.json');
    // next_file
    scope.bUbbt = () => {
      player.set(LAST_FILE_VAR, player.get(CURRENT_FILE_VAR));
      let key = `NONE`;
      let func = files[key];
      if (func) {
        func();
      } else {
        core.exit();
      }
    };

    if (id === undefined) {
      scope.bUbbt();
    } else if (id) {
      scope[id]();
    }
    return player.state;
  };

  files[`Alinea_CH_DunnsMurose.json`] = id => {
    player.set(CURRENT_FILE_VAR, 'Alinea_CH_DunnsMurose.json');
    // next_file
    scope.YDiFN = () => {
      player.set(LAST_FILE_VAR, player.get(CURRENT_FILE_VAR));
      let key = `NONE`;
      let func = files[key];
      if (func) {
        func();
      } else {
        core.exit();
      }
    };

    if (id === undefined) {
      scope.YDiFN();
    } else if (id) {
      scope[id]();
    }
    return player.state;
  };

  files[`Alinea_CH_AldebethBlackrose.json`] = id => {
    player.set(CURRENT_FILE_VAR, 'Alinea_CH_AldebethBlackrose.json');
    // switch
    scope.xn4GD = () => {
      player.set(CURRENT_NODE_VAR, 'xn4GD');
      if (player.once()) scope.Ck2ff();
      else if (true) scope.sBfVM();
    };
    // text
    scope.Ck2ff = () => {
      player.set(CURRENT_NODE_VAR, 'Ck2ff');
      let text = `The leader of the mercenary company occupying these red tents is quite clearly this elegant and aristocratic woman.  Her exquisite silk dress is slashed with the the white and red that adorns the rose-like crest on all these tents, and a fashionable high-neck collar accentuates her ample bosom.  `;
      core.say(text, scope.niNF7);
    };

    // choice
    scope.niNF7 = () => {
      player.set(CURRENT_NODE_VAR, 'niNF7');
      let text = ``;
      core.choose(text, 'niNF7', [
        {
          t: `Who are you?`,
          cb: scope.R3DD4,
          c: () => {
            return true;
          },
        },
        {
          t: `Blackrose LEGION!?  How many of you are there?`,
          cb: scope.fadc7,
          c: () => {
            return player.get('nodes.BSReu');
          },
        },
        {
          t: `What are you doing camped out here with a legion of fighters?`,
          cb: scope.iHiz6,
          c: () => {
            return player.get('nodes.BSReu');
          },
        },
        {
          t: `Any chance you're hiring fighters for your company?`,
          cb: scope.ZaWPY,
          c: () => {
            return player.get('nodes.ya0uI');
          },
        },
        {
          t: `If you have such a large army out here, why haven't you dealt with the bandits to the north?`,
          cb: scope.gIFEQ,
          c: () => {
            return player.get('nodes.ceRC2');
          },
        },
        {
          t: `Nevermind.`,
          cb: scope.QUeaf,
          c: () => {
            return true;
          },
        },
      ]);
    };

    // text
    scope.R3DD4 = () => {
      player.set(CURRENT_NODE_VAR, 'R3DD4');
      let text = `She raises a thinly-painted eyebrow.`;
      core.say(text, scope.dSLiT);
    };

    // text
    scope.dSLiT = () => {
      player.set(CURRENT_NODE_VAR, 'dSLiT');
      let text = `"It's surprising you don't know of me but... ah yes. You must be Larks."`;
      core.say(text, scope.BSReu);
    };

    // text
    scope.BSReu = () => {
      player.set(CURRENT_NODE_VAR, 'BSReu');
      let text = `"I am Lady Aldebeth Blackrose.  I lead this contingent of the great Blackrose legion."`;
      core.say(text, scope.niNF7);
    };

    // text
    scope.fadc7 = () => {
      player.set(CURRENT_NODE_VAR, 'fadc7');
      let text = `Her lips curl into a slight smile.`;
      core.say(text, scope.ceRC2);
    };

    // text
    scope.ceRC2 = () => {
      player.set(CURRENT_NODE_VAR, 'ceRC2');
      let text = `"We are indeed, a great military force, renowned, and dare I say "feared" throughout Sadelica.  You should contain your awe better, it is unbecoming of any person to show such raw emotion."`;
      core.say(text, scope.niNF7);
    };

    // text
    scope.iHiz6 = () => {
      player.set(CURRENT_NODE_VAR, 'iHiz6');
      let text = `"We offer our services to those around Alinea."`;
      core.say(text, scope.ya0uI);
    };

    // text
    scope.ya0uI = () => {
      player.set(CURRENT_NODE_VAR, 'ya0uI');
      let text = `"Caravan escorts, bodyguarding, perhaps a bit of menacing here and there.  A company like mine can be quite useful."`;
      core.say(text, scope.niNF7);
    };

    // text
    scope.ZaWPY = () => {
      player.set(CURRENT_NODE_VAR, 'ZaWPY');
      let text = `"Perhaps... Lavolan has been bugging me about something of that sort recently.  Go speak with him."`;
      core.say(text, scope.niNF7);
    };

    // text
    scope.gIFEQ = () => {
      player.set(CURRENT_NODE_VAR, 'gIFEQ');
      let text = `"Because we have not been paid to do it."`;
      core.say(text, scope.NJWhM);
    };

    // choice
    scope.NJWhM = () => {
      player.set(CURRENT_NODE_VAR, 'NJWhM');
      let text = ``;
      core.choose(text, 'NJWhM', [
        {
          t: `Do you let greed control everything you choose to do?`,
          cb: scope.upE3L,
          c: () => {
            return true;
          },
        },
        {
          t: `They're clearly a problem for the region.  Call it a 'favor.'`,
          cb: scope.itEty,
          c: () => {
            return true;
          },
        },
        {
          t: `Makes sense.`,
          cb: scope.g3csZ,
          c: () => {
            return true;
          },
        },
      ]);
    };

    // text
    scope.upE3L = () => {
      player.set(CURRENT_NODE_VAR, 'upE3L');
      let text = `"Greed is a complex motivation.  It can easily be predicated by self-preservation.  Recklessly using one's power whenever the slightest opportunity arises is the modus operandi of a thug, one that is likely to die much sooner than later."`;
      core.say(text, scope.eBpJ8);
    };

    // text
    scope.eBpJ8 = () => {
      player.set(CURRENT_NODE_VAR, 'eBpJ8');
      let text = `"Why should I risk my army when I have little more to gain than the prospect of a lesser-sized army?  The Blackrose estate would be shamed."`;
      core.say(text, scope.niNF7);
    };

    // text
    scope.itEty = () => {
      player.set(CURRENT_NODE_VAR, 'itEty');
      let text = `"For the region?  At worst they are a minor threat to Alinea's prosperity.  At best they are an inconvenience for the Guildemarche estate.  I have erected my camp here to keep an eye on them if this status quo changes, but they really haven't posed any major threat."`;
      core.say(text, scope.yoi5g);
    };

    // text
    scope.yoi5g = () => {
      player.set(CURRENT_NODE_VAR, 'yoi5g');
      let text = `"Perhaps the situation will escalate, perhaps not.  I am poised to handle either eventuality."`;
      core.say(text, scope.q02WH);
    };

    // choice
    scope.q02WH = () => {
      player.set(CURRENT_NODE_VAR, 'q02WH');
      let text = ``;
      core.choose(text, 'q02WH', [
        {
          t: `Are you "friends" with the Guildimarche Estate?`,
          cb: scope.WCV65,
          c: () => {
            return true;
          },
        },
        {
          t: `How cunning of you.`,
          cb: scope.Kx4r5,
          c: () => {
            return true;
          },
        },
      ]);
    };

    // text
    scope.WCV65 = () => {
      player.set(CURRENT_NODE_VAR, 'WCV65');
      let text = `"Certainly not!  Each trouble for him is a victory for the Blackrose Estate.  But, alas, we both are of the nobility, and usually reside on the same side of the conflict when all is said and done."`;
      core.say(text, scope.niNF7);
    };

    // text
    scope.Kx4r5 = () => {
      player.set(CURRENT_NODE_VAR, 'Kx4r5');
      let text = `"You'll come to find it takes a certain amount of that to survive on Sadelica."`;
      core.say(text, scope.niNF7);
    };

    // text
    scope.g3csZ = () => {
      player.set(CURRENT_NODE_VAR, 'g3csZ');
      let text = `"Indeed it does.  At worst these bandits are a minor threat to Alinea's prosperity.  At best they are an inconvenience for the Guildemarche estate.  I have erected my camp here to keep an eye on them if this status quo changes, but they really haven't posed any major threat."`;
      core.say(text, scope.yoi5g);
    };

    // next_file
    scope.QUeaf = () => {
      player.set(LAST_FILE_VAR, player.get(CURRENT_FILE_VAR));
      let key = `NONE`;
      let func = files[key];
      if (func) {
        func();
      } else {
        core.exit();
      }
    };

    // text
    scope.sBfVM = () => {
      player.set(CURRENT_NODE_VAR, 'sBfVM');
      let text = `"Ah yes.  You.  What is it you want this time?"`;
      core.say(text, scope.niNF7);
    };

    if (id === undefined) {
      scope.xn4GD();
    } else if (id) {
      scope[id]();
    }
    return player.state;
  };

  files[`Alinea_CH_BartenderRus.json`] = id => {
    player.set(CURRENT_FILE_VAR, 'Alinea_CH_BartenderRus.json');
    // switch
    scope.y9gCB = () => {
      player.set(CURRENT_NODE_VAR, 'y9gCB');
      if (player.once()) scope.gUtER();
      else if (true) scope.mfEJp();
    };
    // text
    scope.gUtER = () => {
      player.set(CURRENT_NODE_VAR, 'gUtER');
      let text = `The bartender of this tavern is a stout man with an amicable face.  "Good day to you!  Can I get you a drink?"`;
      core.say(text, scope.sZNhw);
    };

    // choice
    scope.sZNhw = () => {
      player.set(CURRENT_NODE_VAR, 'sZNhw');
      let text = ``;
      core.choose(text, 'sZNhw', [
        {
          t: `A drink sounds nice.`,
          cb: scope.HyJzb,
          c: () => {
            return true;
          },
        },
        {
          t: `You mentioned someone named "Idoreo"?`,
          cb: scope.FpViJ,
          c: () => {
            return (
              player.get('nodes.WtgxM') &&
              !player.hasSpokenTo('Alinea_CH_Idoreo')
            );
          },
        },
        {
          t: `Idoreo sponsors this tavern?`,
          cb: scope.MMdxN,
          c: () => {
            return (
              player.get('nodes.WtgxM') &&
              player.hasSpokenTo('Alinea_CH_Idoreo')
            );
          },
        },
        {
          t: `Nevermind.`,
          cb: scope.MBMNa,
          c: () => {
            return true;
          },
        },
      ]);
    };

    // pass_fail
    scope.HyJzb = () => {
      player.set(CURRENT_NODE_VAR, 'HyJzb');
      const condition = (() => {
        return player.get('coins') > 10;
      })();
      if (condition) {
        player.set(CURRENT_NODE_VAR, 'U4b6O');
        let text = ``;
        core.say(text, scope.u06Bp);
      }
      if (!condition) {
        player.set(CURRENT_NODE_VAR, 'WfDHF');
        let text = ``;
        core.say(text, scope.Orm12);
      }
    };
    // text
    scope.u06Bp = () => {
      player.set(CURRENT_NODE_VAR, 'u06Bp');
      let text = `"Plum wine or ale?"`;
      core.say(text, scope.n3c1E);
    };

    // choice
    scope.n3c1E = () => {
      player.set(CURRENT_NODE_VAR, 'n3c1E');
      let text = ``;
      core.choose(text, 'n3c1E', [
        {
          t: `Plum wine sounds super 'del'. (What the hip kids are calling 'delicious' nowadays.)`,
          cb: scope.EoQtT,
          c: () => {
            return true;
          },
        },
        {
          t: `Ale would be great.`,
          cb: scope.h7hIn,
          c: () => {
            return true;
          },
        },
        {
          t: `Actually... maybe not.`,
          cb: scope.sZNhw,
          c: () => {
            return true;
          },
        },
      ]);
    };

    // action
    scope.EoQtT = async () => {
      player.set(CURRENT_NODE_VAR, 'EoQtT');
      await player.modifyCoins(-6);
      scope.ICNcg();
    };

    // text
    scope.ICNcg = () => {
      player.set(CURRENT_NODE_VAR, 'ICNcg');
      let text = `After an odd glance, he grabs a bottle from beneath the counter and skillfully pours you each a goblet of succulent plum wine.  Having just stepped off a trans-oceanic ship, it tastes heavenly.`;
      core.say(text, scope.WtgxM);
    };

    // text
    scope.WtgxM = () => {
      player.set(CURRENT_NODE_VAR, 'WtgxM');
      let text = `The bartender grins.  "That's a good stock isn't it?  You've got Idoreo to thank for that.  Loves the sweeter side of the drinks, so he sponsors the tavern, so long as I provide it."`;
      core.say(text, scope.sZNhw);
    };

    // action
    scope.h7hIn = async () => {
      player.set(CURRENT_NODE_VAR, 'h7hIn');
      await player.modifyCoins(-6);
      scope.xMq8B();
    };

    // text
    scope.xMq8B = () => {
      player.set(CURRENT_NODE_VAR, 'xMq8B');
      let text = `He leaves the counter for a moment and comes back with an old barrel, heaving it onto the counter.  "Sorry, most people don't ask for this, so I don't keep it front."  He pours a few mugs and pushes them across the bar at you.`;
      core.say(text, scope.AATnJ);
    };

    // text
    scope.AATnJ = () => {
      player.set(CURRENT_NODE_VAR, 'AATnJ');
      let text = `The ale is... okay.  Even after your long journey across the ocean, it still tastes kind of bland.  It's plenty strong though.`;
      core.say(text, scope.sZNhw);
    };

    // text
    scope.Orm12 = () => {
      player.set(CURRENT_NODE_VAR, 'Orm12');
      let text = `You don't have enough money to waste on small luxuries like tavern drinks!`;
      core.say(text, scope.sZNhw);
    };

    // text
    scope.FpViJ = () => {
      player.set(CURRENT_NODE_VAR, 'FpViJ');
      let text = `"Idoreo is the merchant who owns of most of the warehouses in Alinea.  He charges for storage space and since Alinea is a port town, he's got himself a pretty valuable business.  He's well-known around here.  One might even say well-liked."`;
      core.say(text, scope.MMdxN);
    };

    // text
    scope.MMdxN = () => {
      player.set(CURRENT_NODE_VAR, 'MMdxN');
      let text = `"He sponsors this tavern.  Half the beds in the rooms are feather mattresses because of his generosity.  Like I said, he's kinda got a sweet tooth.  As long as I stock up on good, plum wine, then he's happy, I'm happy, and we're all happy."`;
      core.say(text, scope.sZNhw);
    };

    // next_file
    scope.MBMNa = () => {
      player.set(LAST_FILE_VAR, player.get(CURRENT_FILE_VAR));
      let key = `NONE`;
      let func = files[key];
      if (func) {
        func();
      } else {
        core.exit();
      }
    };

    // text
    scope.mfEJp = () => {
      player.set(CURRENT_NODE_VAR, 'mfEJp');
      let text = `"Here for a drink?"`;
      core.say(text, scope.sZNhw);
    };

    if (id === undefined) {
      scope.y9gCB();
    } else if (id) {
      scope[id]();
    }
    return player.state;
  };

  files[`Alinea_CH_GuardCaptainMullen.json`] = id => {
    player.set(CURRENT_FILE_VAR, 'Alinea_CH_GuardCaptainMullen.json');
    // action
    scope.wgaDX = () => {
      player.set(CURRENT_NODE_VAR, 'wgaDX');
      scope.xtxDG();
    };

    // switch
    scope.xtxDG = () => {
      player.set(CURRENT_NODE_VAR, 'xtxDG');
      if (player.once()) scope.iBk1i();
      else if (true) scope.gWBQt();
    };
    // text
    scope.iBk1i = () => {
      player.set(CURRENT_NODE_VAR, 'iBk1i');
      let text = `The man sitting in this office appears to be a Realm Captain.  Though he has removed his helmet - the plumes of which indicate an officer's rank - the green sash across his chainmail is adorned with various medals, and there are far more of them than on any of the guards you've seen in Alinea thus far.`;
      core.say(text, scope.YiPwY);
    };

    // text
    scope.YiPwY = () => {
      player.set(CURRENT_NODE_VAR, 'YiPwY');
      let text = `He glances up as you approach him, and his lips twitch into a tiny smile.  You distinctly hear the word "Lark" muttered under his breath.`;
      core.say(text, scope.Z0oAJ);
    };

    // choice
    scope.Z0oAJ = () => {
      player.set(CURRENT_NODE_VAR, 'Z0oAJ');
      let text = ``;
      core.choose(text, 'Z0oAJ', [
        {
          t: `Who might you be?`,
          cb: scope.gOm7y,
          c: () => {
            return true;
          },
        },
        {
          t: `You seem... interested in me.  Why is that?`,
          cb: scope.ZXQRy,
          c: () => {
            return true;
          },
        },
        {
          t: `What exactly does the Realm do here?`,
          cb: scope.TlRap,
          c: () => {
            return player.get('nodes.NfStn');
          },
        },
        {
          t: `You mentioned that I'd be 'perfect' for something?`,
          cb: scope.KKukM,
          c: () => {
            return player.get('nodes.NfStn');
          },
        },
        {
          t: `Nevermind.`,
          cb: scope.F3tbm,
          c: () => {
            return true;
          },
        },
      ]);
    };

    // text
    scope.gOm7y = () => {
      player.set(CURRENT_NODE_VAR, 'gOm7y');
      let text = `"Guard Captain Mullen.  Overseer of the Realm enforcement here."`;
      core.say(text, scope.Z0oAJ);
    };

    // text
    scope.ZXQRy = () => {
      player.set(CURRENT_NODE_VAR, 'ZXQRy');
      let text = `"Because your a Lark."`;
      core.say(text, scope.m4shd);
    };

    // text
    scope.m4shd = () => {
      player.set(CURRENT_NODE_VAR, 'm4shd');
      let text = `He puts his hands up like this is the most self-explanatory thing in the world.`;
      core.say(text, scope.NfStn);
    };

    // text
    scope.NfStn = () => {
      player.set(CURRENT_NODE_VAR, 'NfStn');
      let text = `"Whether or not you intend it, people like you come into town and upset the status quo.  Normally I hate that sort of thing, but right now you might be just the thing I need."`;
      core.say(text, scope.Z0oAJ);
    };

    // text
    scope.TlRap = () => {
      player.set(CURRENT_NODE_VAR, 'TlRap');
      let text = `"We keep everyone's power in check."`;
      core.say(text, scope.D5RSu);
    };

    // text
    scope.D5RSu = () => {
      player.set(CURRENT_NODE_VAR, 'D5RSu');
      let text = `He clears his throat like he's getting ready for a lengthy explanation...`;
      core.say(text, scope.FgpK0);
    };

    // choice
    scope.FgpK0 = () => {
      player.set(CURRENT_NODE_VAR, 'FgpK0');
      let text = ``;
      core.choose(text, 'FgpK0', [
        {
          t: `(Let him continue.)`,
          cb: scope.tk1HK,
          c: () => {
            return true;
          },
        },
        {
          t: `Yeah, yeah.  No need to explain.  That makes sense.`,
          cb: scope.Z0oAJ,
          c: () => {
            return true;
          },
        },
      ]);
    };

    // text
    scope.tk1HK = () => {
      player.set(CURRENT_NODE_VAR, 'tk1HK');
      let text = `"The Realm owns the Mainland.  This is well-known, even to somebody like you.  But what you may not know is that the Realm does not own Sadelica.  The fact of the matter is that we don't have enough influence or force to hold it and the Mainland simultaneously.  So the Realm have declared it a neutral territory."`;
      core.say(text, scope.dAiOV);
    };

    // text
    scope.dAiOV = () => {
      player.set(CURRENT_NODE_VAR, 'dAiOV');
      let text = `"This, of course, poses a problem.  If the Realm lets any other faction become too powerful on Sadelica, then it will be that much more difficult to come conquer it later - which of course will happen eventually.  But the fact remains that we can benefit greatly by preventing anybody from gaining too much influence."`;
      core.say(text, scope.lWqhH);
    };

    // text
    scope.lWqhH = () => {
      player.set(CURRENT_NODE_VAR, 'lWqhH');
      let text = `"A select contingent of Realm military resides on Sadelica to keep maintain this directive.  I, my men - and of course Dockmaster Claire - are a part of this contingent garrisoned here in Alinea."`;
      core.say(text, scope.Z0oAJ);
    };

    // switch
    scope.KKukM = () => {
      player.set(CURRENT_NODE_VAR, 'KKukM');
      if (player.once()) scope.r47RH();
      else if (true) scope.fKO2y();
    };
    // text
    scope.r47RH = () => {
      player.set(CURRENT_NODE_VAR, 'r47RH');
      let text = `"As a matter of fact, yes."`;
      core.say(text, scope.yJXxC);
    };

    // text
    scope.yJXxC = () => {
      player.set(CURRENT_NODE_VAR, 'yJXxC');
      let text = `"You may have heard this from someone else in town, but there is a stubborn group of bandits blocking the bridge that leads north, towards Boromak."`;
      core.say(text, scope.AlVli);
    };

    // text
    scope.AlVli = () => {
      player.set(CURRENT_NODE_VAR, 'AlVli');
      let text = `"I've also got a little... intel mission I need assistance with.  A Lark would be perfect."`;
      core.say(text, scope.FIdYK);
    };

    // choice
    scope.FIdYK = () => {
      player.set(CURRENT_NODE_VAR, 'FIdYK');
      let text = ``;
      core.choose(text, 'FIdYK', [
        {
          t: `Tell me about the bandits.`,
          cb: scope.alz6T,
          c: () => {
            return true;
          },
        },
        {
          t: `The intel mission sounds a bit... spicy.`,
          cb: scope.QO8ly,
          c: () => {
            return true;
          },
        },
        {
          t: `Let's talk about something else.`,
          cb: scope.Z0oAJ,
          c: () => {
            return true;
          },
        },
      ]);
    };

    // text
    scope.alz6T = () => {
      player.set(CURRENT_NODE_VAR, 'alz6T');
      let text = `"It's quite simple. I need them taken care of, and I don't have the manpower to do it.  Obviously you're just one person, but I've got a plan that you'd be just the right person for."`;
      core.say(text, scope.MlDXt);
    };

    // choice
    scope.MlDXt = () => {
      player.set(CURRENT_NODE_VAR, 'MlDXt');
      let text = ``;
      core.choose(text, 'MlDXt', [
        {
          t: `Aren't you people trying to be neutral?`,
          cb: scope.hWLiL,
          c: () => {
            return player.get('nodes.TlRap');
          },
        },
        {
          t: `Retreat?  Why would you have to do that?  Are you under attack or something?`,
          cb: scope.cxpVw,
          c: () => {
            return player.get('nodes.hWLiL');
          },
        },
        {
          t: `How can I help?`,
          cb: scope.aM3sp,
          c: () => {
            return true;
          },
        },
      ]);
    };

    // text
    scope.hWLiL = () => {
      player.set(CURRENT_NODE_VAR, 'hWLiL');
      let text = `"Yes, of course!  But we've got a complex situation here.  Those bandits blocking that bridge means we can't bring in supplies from up there.  And if we run out of anything, we run high risk of having to retreat."`;
      core.say(text, scope.MlDXt);
    };

    // text
    scope.cxpVw = () => {
      player.set(CURRENT_NODE_VAR, 'cxpVw');
      let text = `"You don't need a battle to be under attack.  Sadelica is a cutthroat place.  You show any weakness and somebody will come try to crush you."`;
      core.say(text, scope.MgaCV);
    };

    // text
    scope.MgaCV = () => {
      player.set(CURRENT_NODE_VAR, 'MgaCV');
      let text = `"For example, that Blackrose camp on the east side of town.  Lady Blackrose says she's here to provide mercenary service, but you can bet she's considering a takeover if she thinks she can get away with it."`;
      core.say(text, scope.G2bu8);
    };

    // choice
    scope.G2bu8 = () => {
      player.set(CURRENT_NODE_VAR, 'G2bu8');
      let text = ``;
      core.choose(text, 'G2bu8', [
        {
          t: `Sounds like you guys have it rough out here.`,
          cb: scope.zTDaS,
          c: () => {
            return true;
          },
        },
        {
          t: `Isn't that... treason?`,
          cb: scope.RPCB5,
          c: () => {
            return true;
          },
        },
      ]);
    };

    // text
    scope.zTDaS = () => {
      player.set(CURRENT_NODE_VAR, 'zTDaS');
      let text = `"Out here, only the strong can survive."`;
      core.say(text, scope.MlDXt);
    };

    // text
    scope.RPCB5 = () => {
      player.set(CURRENT_NODE_VAR, 'RPCB5');
      let text = `"On the Mainland, yes, of course.  But that kind of thing isn't applied on Sadelica.  The Realm doesn't own this land."`;
      core.say(text, scope.zTDaS);
    };

    // text
    scope.aM3sp = () => {
      player.set(CURRENT_NODE_VAR, 'aM3sp');
      let text = `"The bandits have a camp to the north.  Your job would be to sneak in and take out their leader.  I've seen him myself, and I can grantee he's the reason for their obstinance."`;
      core.say(text, scope.Ca2EO);
    };

    // choice
    scope.Ca2EO = () => {
      player.set(CURRENT_NODE_VAR, 'Ca2EO');
      let text = ``;
      core.choose(text, 'Ca2EO', [
        {
          t: `What makes you think I'm capable of doing that?`,
          cb: scope.ZOsRf,
          c: () => {
            return true;
          },
        },
        {
          t: `Sounds fun!`,
          cb: scope.FUaJT,
          c: () => {
            return true;
          },
        },
        {
          t: `Why would I do that?`,
          cb: scope.UCXaC,
          c: () => {
            return true;
          },
        },
      ]);
    };

    // text
    scope.ZOsRf = () => {
      player.set(CURRENT_NODE_VAR, 'ZOsRf');
      let text = `"Just a hunch.  You look like you know your way around a fight.  Of course you don't have to do it if you don't want to.  Consider it an opportunity to help the Realm.  A favor.  I'd certainly be in your debt."`;
      core.say(text, scope.J7toV);
    };

    // choice
    scope.J7toV = () => {
      player.set(CURRENT_NODE_VAR, 'J7toV');
      let text = ``;
      core.choose(text, 'J7toV', [
        {
          t: `I'll consider it.`,
          cb: scope.FIdYK,
          c: () => {
            return true;
          },
        },
        {
          t: `No thanks.`,
          cb: scope.FIdYK,
          c: () => {
            return true;
          },
        },
      ]);
    };

    // text
    scope.FUaJT = () => {
      player.set(CURRENT_NODE_VAR, 'FUaJT');
      let text = `He raises an eyebrow at you, but eventually just shrugs.`;
      core.say(text, scope.PtNUI);
    };

    // text
    scope.PtNUI = () => {
      player.set(CURRENT_NODE_VAR, 'PtNUI');
      let text = `"Your 'fun' is my gain."`;
      core.say(text, scope.J7toV);
    };

    // text
    scope.UCXaC = () => {
      player.set(CURRENT_NODE_VAR, 'UCXaC');
      let text = `"Because the Realm can provide adequate compensation for such a task."`;
      core.say(text, scope.J7toV);
    };

    // text
    scope.QO8ly = () => {
      player.set(CURRENT_NODE_VAR, 'QO8ly');
      let text = `"It should actually be quite simple."`;
      core.say(text, scope.GBVGl);
    };

    // text
    scope.GBVGl = () => {
      player.set(CURRENT_NODE_VAR, 'GBVGl');
      let text = `"You may or may not know, but there's a large encampment on the eastern side of Alinea.  It's a military force under the control of the esteemed Blackrose estate."`;
      core.say(text, scope.UbFi4);
    };

    // text
    scope.UbFi4 = () => {
      player.set(CURRENT_NODE_VAR, 'UbFi4');
      let text = `"The force they have here is... quite powerful.  Lady Blackrose says she's here to provide mercenary service for the Merchantry here, but I suspect she has other reasons.  I needed a way to keep an eye on them."`;
      core.say(text, scope.pMA8S);
    };

    // text
    scope.pMA8S = () => {
      player.set(CURRENT_NODE_VAR, 'pMA8S');
      let text = `"I've got a spy in their ranks.  Your task would be simply to make contact and report back to me.  It's easy for a Lark to go anywhere here, this should be, as I said, quite simple."`;
      core.say(text, scope.nFPBP);
    };

    // choice
    scope.nFPBP = () => {
      player.set(CURRENT_NODE_VAR, 'nFPBP');
      let text = ``;
      core.choose(text, 'nFPBP', [
        {
          t: `Is there a payment involved for this?`,
          cb: scope.QRl7s,
          c: () => {
            return true;
          },
        },
        {
          t: `I'll consider it.`,
          cb: scope.FIdYK,
          c: () => {
            return true;
          },
        },
        {
          t: `No thanks.`,
          cb: scope.FIdYK,
          c: () => {
            return true;
          },
        },
      ]);
    };

    // text
    scope.QRl7s = () => {
      player.set(CURRENT_NODE_VAR, 'QRl7s');
      let text = `"The Realm always provides payment for services rendered to it."`;
      core.say(text, scope.nFPBP);
    };

    // text
    scope.fKO2y = () => {
      player.set(CURRENT_NODE_VAR, 'fKO2y');
      let text = `"Like I explained, I've got problems with bandits, and an intel mission."`;
      core.say(text, scope.FIdYK);
    };

    // next_file
    scope.F3tbm = () => {
      player.set(LAST_FILE_VAR, player.get(CURRENT_FILE_VAR));
      let key = `NONE`;
      let func = files[key];
      if (func) {
        func();
      } else {
        core.exit();
      }
    };

    // text
    scope.gWBQt = () => {
      player.set(CURRENT_NODE_VAR, 'gWBQt');
      let text = `"You need something?"`;
      core.say(text, scope.Z0oAJ);
    };

    if (id === undefined) {
      scope.wgaDX();
    } else if (id) {
      scope[id]();
    }
    return player.state;
  };
  files.exit = () => {
    core.exit();
  };
  if (!isDryRun) {
    files['main.json']();
  }
  return { files, scope };
}
